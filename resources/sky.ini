; SkyBlock language pack for MyPlot
; Created by Wiez, Exxarion, jasonwynn10 and XenialDan
; Updated time : 8/8/2017

; Popup when entering an island
popup = You entered island {%0}
popup.owner = Owned by {%0}
popup.available = This island is open! Use /is claim to claim the island.
popup.denied = You are denied access to this island!

; /is info
command.name = island
command.alias = is
command.desc = Claim and manage your islands
command.usage = /is [help]
command.unknown = Unknown command. Try /is help for a list of commands

subcommand.usage = Usage: {%0}

; Errors that are displayed when the player does something wrong, or the plugin screws up.
error = Whoops! Something went wrong
notinplot = You are not standing inside an island
notowner = You do not own this island

confirm = confirm

; The /is help Subcommand
help.name = help
help.desc = Shows the help menu
help.usage = /is help [page: int]
help.header = --- Showing MyPlot help page {%0} of {%1} ---

; The /is addhelper Subcommand
addhelper.name = addhelper
addhelper.alias = addh
addhelper.desc = Add a helper to your island
addhelper.usage = /is addhelper <player: string>
addhelper.alreadyone = {%0} is already a helper of this island
addhelper.notaplayer = That player is not online right now!
addhelper.success = {%0} is now a helper of this island

; The /is removehelper Subcommand
removehelper.name = removehelper
removehelper.alias = delh
removehelper.desc = Remove a helper from your island
removehelper.usage = /is removehelper <player: string>
removehelper.notone = {%0} is not a helper
removehelper.success = {%0} has been removed from island helpers

; The /is denyplayer Subcommand
denyplayer.name = denyplayer
denyplayer.alias = deny
denyplayer.desc = Deny a player from accessing your island
denyplayer.usage = /is deny <player: string>
denyplayer.helper = {%0} is a helper!
denyplayer.alreadyone = {%0} has already been denied from this island
denyplayer.notaplayer = That player is not online right now!
denyplayer.cannotdeny = {%0} cannot be denied!
denyplayer.attempteddeny = {%0} attempted to deny you from their island!
denyplayer.success1 = {%0} is now denied access to the island
denyplayer.success2 = "You were denied access to island {%0};{%1} by {%2}"

; The /is undenyplayer Subcommand
undenyplayer.name = undenyplayer
undenyplayer.alias = undeny
undenyplayer.desc = Undeny a player from accessing your island
undenyplayer.usage = /is undeny <player: string>
undenyplayer.notone = {%0} is allowed already!
undenyplayer.notaplayer = That player is not online right now!
undenyplayer.success1 = {%0} has been allowed into the island
undenyplayer.success2 = "You were allowed access to island {%0};{%1} by {%2}"
undenyplayer.failure = {%0} is still denied!

; The /is claim Subcommand
claim.name = claim
claim.desc = Claim the current island you are standing on
claim.usage = /is claim [name: string]
claim.yourplot = You have already claimed this island
claim.alreadyclaimed = This island is already claimed by {%0}
claim.maxplots = You reached the limit of {%0} islands per player
claim.nomoney = You do not have enough money to claim this island
claim.success = You have successfully claimed the island

; The /is auto Subcommand
auto.name = auto
auto.alias = a
auto.desc = Teleports to the next free island
auto.usage = /is auto [claim: bool] [name: string]
auto.notplotworld = You are not in an island world
auto.success = "Teleported to free island ({%0};{%1})"
auto.noplots = Could not find any available islands

; The /is dispose Subcommand
dispose.name = dispose
dispose.desc = Disposes your island
dispose.usage = /is dispose
dispose.confirm = Are you sure you want to dispose island {%0} ? If so, use /is dispose confirm
dispose.nomoney = You do not have enough money to dispose this island
dispose.success = Island disposed

; The /is reset Subcommand
reset.name = reset
reset.desc = Disposes and clears your island
reset.usage = /is reset
reset.confirm = Are you sure you want to reset island {%0} ? If so, use /is reset confirm
reset.nomoney = You do not have enough money to reset this island
reset.success = Island reset

; The /is clear Subcommand
clear.name = clear
clear.desc = Clears your island
clear.usage = /is clear
clear.confirm = Are you sure you want to clear island {%0} ? If so, use /is clear confirm
clear.nomoney = You do not have enough money to clear this island
clear.success = Island cleared

; The /is biome Subcommand
biome.name = biome
biome.desc = Changes your island biome
biome.usage = /is biome [biome: string]
biome.success = Island biome changed to {%0}
biome.invalid = That biome does not exist
biome.possible = Possible biomes are: {%0}

; The /is biomes Subcommand
biomes.name = biomes
biomes.desc = List all available biomes
biomes.usage = /is biomes
biomes.possible = Possible biomes are: {%0}

; The /is name Subcommand
name.name = name
name.desc = Sets or changes your island name
name.usage = /is name <name: string>
name.success = Island name set to {%0}

; The /is home Subcommand
home.name = home
home.alias = h
home.desc = Travel to your island
home.usage = /is home [number: int] [world: string]
home.noplots = You do not own any islands in this world
home.notexist = You do not own an island with id {%0} in this world
home.success = Teleported to island {%0} in world {%1}
home.error = Could not travel to island

; The /is homes Subcommand
homes.name = homes
homes.desc = Shows your claimed islands
homes.usage = /is homes [world: string]
homes.noplots = You do not own any islands
homes.header = Islands you own:

; The /is info Subcommand
info.name = info
info.alias = i
info.desc = Shows information about an island
info.usage = /is info
info.about = Info about island {%0}
info.plotname = Name: {%0}
info.owner = Owner: {%0}
info.helpers = Helpers: {%0}
info.denied = Denied: {%0}
info.biome = Biome: {%0}

; The /is generate Subcommand - Can only be used by OPs or players with the myplot.command.generate permission
generate.name = generate
generate.alias = gen
generate.desc = Generate a new island world
generate.usage = /is generate <name: string>
generate.exists = World with name {%0} already exists
generate.gexists = Generator {%0} does not exist
generate.success = Successfully generated island world {%0}
generate.error = World could not be generated

; The /is give Subcommand
give.name = give
give.desc = Give your island to someone else
give.usage = /is give [player: string]
give.notonline = That player is not online
give.maxedout = That player has reached the maximum number of islands
give.toself = You cannot give an island to yourself
give.confirm = Are you sure you want to give island {%0} to player {%1}? If so, use /is give {%1} confirm
give.success = You have given the island to {%0}
give.received = {%0} gave you their island, {%1}

; The /is warp Subcommand
warp.name = warp
warp.desc = Teleport to an island
warp.usage = /is warp <id: int> [world: string]
warp.wrongid = "The island id should be in the format X;Z"
warp.notinplotworld = You are not in an island world
warp.unclaimed = You cannot warp to an unclaimed island
warp.success = You are teleported to island {%0}

; The /is middle Subcommand
middle.name = middle
middle.alias = mid
middle.desc = Teleports the player to exact center of island at ground level
middle.usage = /is mid
middle.success = Teleporting complete!

; The /is setowner Subcommand
setowner.name = setowner
setowner.desc = Sets the new owner of the island without charging anything
setowner.usage = /is setowner <player: string>
setowner.maxplots = That player reached their islands limit of {%0}
setowner.success = {%0} is now the owner of this island

; The /is list Subcommand
list.name = list
list.alias = l
list.desc = Shows all islands a player has
list.usage = /is list [player: string]
list.found = Island {%0} at ({%1};{%2}),
